{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Navigation","_ref","fixedPages","morePagesGetter","currentPage","setCurrentPage","isOpen","setIsOpen","useState","morePages","React","createElement","className","map","page","key","onClick","charAt","toUpperCase","slice","length","ChevronDown","size","Block","_ref2","block","level","hasChildren","children","content","child","index","PostList","_ref3","onSelectPost","posts","setPosts","useEffect","Promise","resolve","id","title","excerpt","then","post","Post","_ref4","postId","setPost","blocks","fetchPost","Bookshelf","books","setBooks","author","recommendation","book","GenericPage","_ref5","setContent","fetchPageContent","App","selectedPostId","setSelectedPostId","allPages","getMorePages","filter","includes","renderContent","Date","getFullYear","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"yKAIA,MA0BMA,EAAaC,IAAkE,IAAjEC,WAAEA,EAAUC,gBAAEA,EAAeC,YAAEA,EAAWC,eAAEA,GAAgBJ,EAC9E,MAAOK,EAAQC,GAAaC,oBAAS,GAC/BC,EAAYN,IAElB,OACEO,IAAAC,cAAA,OAAKC,UAAU,oDACbF,IAAAC,cAAA,QAAMC,UAAU,8BAA6B,aAC7CF,IAAAC,cAAA,OAAKC,UAAU,+BACZV,EAAWW,IAAIC,GACdJ,IAAAC,cAAA,UACEI,IAAKD,EACLE,QAASA,IAAMX,EAAeS,GAC9BF,8EAA+ER,IAAgBU,EAAO,gBAAkB,MAEvHA,EAAKG,OAAO,GAAGC,cAAgBJ,EAAKK,MAAM,KAG9CV,EAAUW,OAAS,GAClBV,IAAAC,cAAA,OAAKC,UAAU,YACbF,IAAAC,cAAA,UACEK,QAASA,IAAMT,GAAWD,GAC1BM,UAAU,sFACX,QACMF,IAAAC,cAACU,IAAW,CAACC,KAAM,GAAIV,8DAA+DN,EAAS,aAAe,QAErHI,IAAAC,cAAA,OAAKC,wIAAyIN,EAAS,uBAAyB,uBAC7KG,EAAUI,IAAIC,GACbJ,IAAAC,cAAA,UACEI,IAAKD,EACLE,QAASA,KAAQX,EAAeS,GAAOP,GAAU,IACjDK,UAAU,sHAETE,SAWbS,EAAQC,IAA0B,IAAzBC,MAAEA,EAAKC,MAAEA,EAAQ,GAAGF,EACjC,MAAMG,EAAcF,EAAMG,UAAYH,EAAMG,SAASR,OAAS,EAE9D,OACEV,IAAAC,cAAA,OAAKC,kBAAmBc,EAAQ,EAAI,OAAS,MAC3ChB,IAAAC,cAAA,KAAGC,UAAU,iBAAiBa,EAAMI,SACnCF,GACCjB,IAAAC,cAAA,OAAKC,UAAU,QACZa,EAAMG,SAASf,IAAI,CAACiB,EAAOC,IAC1BrB,IAAAC,cAACY,EAAK,CAACR,IAAKgB,EAAON,MAAOK,EAAOJ,MAAOA,EAAQ,QAQtDM,EAAWC,IAAsB,IAArBC,aAAEA,GAAcD,EAChC,MAAOE,EAAOC,GAAY5B,mBAAS,IAMnC,OAJA6B,oBAAU,KAzFaC,QAAQC,QAAQ,CACvC,CAAEC,GAAI,EAAGC,MAAO,aAAcC,QAAS,2BACvC,CAAEF,GAAI,EAAGC,MAAO,cAAeC,QAAS,8BAwFzBC,KAAKP,IACjB,IAGD1B,IAAAC,cAAA,WACED,IAAAC,cAAA,MAAIC,UAAU,+BAA8B,SAC3CuB,EAAMtB,IAAI+B,GACTlC,IAAAC,cAAA,OAAKI,IAAK6B,EAAKJ,GAAI5B,UAAU,QAC3BF,IAAAC,cAAA,MAAIC,UAAU,8BACZF,IAAAC,cAAA,UACEK,QAASA,IAAMkB,EAAaU,EAAKJ,IACjC5B,UAAU,gEAETgC,EAAKH,QAGV/B,IAAAC,cAAA,KAAGC,UAAU,iBAAiBgC,EAAKF,aAOvCG,EAAOC,IAAgB,IAAfC,OAAEA,GAAQD,EACtB,MAAOF,EAAMI,GAAWxC,mBAAS,MAMjC,OAJA6B,oBAAU,KA/GOG,IAAOF,QAAQC,QAAQ,CACxCC,KACAC,cAAeD,IACfS,OAAQ,CACN,CAAEpB,QAAS,mCAAoCD,SAAU,IACzD,CAAEC,QAAS,+BAAgCD,SAAU,OA2GrDsB,CAAUH,GAAQJ,KAAKK,IACtB,CAACD,IAECH,EAGHlC,IAAAC,cAAA,WACED,IAAAC,cAAA,MAAIC,UAAU,+BAA+BgC,EAAKH,OAClD/B,IAAAC,cAAA,OAAKC,UAAU,SACZgC,EAAKK,OAAOpC,IAAI,CAACY,EAAOM,IACvBrB,IAAAC,cAACY,EAAK,CAACR,IAAKgB,EAAON,MAAOA,OAPhBf,IAAAC,cAAA,WAAK,eAcnBwC,EAAYA,KAChB,MAAOC,EAAOC,GAAY7C,mBAAS,IAMnC,OAJA6B,oBAAU,KApHaC,QAAQC,QAAQ,CACvC,CAAEE,MAAO,SAAUa,OAAQ,WAAYC,eAAgB,eACvD,CAAEd,MAAO,SAAUa,OAAQ,WAAYC,eAAgB,yBAmHxCZ,KAAKU,IACjB,IAGD3C,IAAAC,cAAA,WACED,IAAAC,cAAA,MAAIC,UAAU,+BAA8B,gBAC5CF,IAAAC,cAAA,OAAKC,UAAU,aACZwC,EAAMvC,IAAI,CAAC2C,EAAMzB,IAChBrB,IAAAC,cAAA,OAAKI,IAAKgB,GACRrB,IAAAC,cAAA,MAAIC,UAAU,yBAAyB4C,EAAKf,OAC5C/B,IAAAC,cAAA,KAAGC,UAAU,iBAAgB,MAAI4C,EAAKF,QACtC5C,IAAAC,cAAA,KAAGC,UAAU,QAAQ4C,EAAKD,qBAQhCE,EAAcC,IAAc,IAAb5C,KAAEA,GAAM4C,EAC3B,MAAO7B,EAAS8B,GAAcnD,mBAAS,MAMvC,OAJA6B,oBAAU,KAlJcvB,IAASwB,QAAQC,QAAQ,CACjDE,MAAO3B,EAAKG,OAAO,GAAGC,cAAgBJ,EAAKK,MAAM,GACjD8B,OAAQ,CACN,CAAEpB,uBAAwBf,kBAAsBc,SAAU,OAgJ1DgC,CAAiB9C,GAAM6B,KAAKgB,IAC3B,CAAC7C,IAECe,EAGHnB,IAAAC,cAAA,WACED,IAAAC,cAAA,MAAIC,UAAU,+BAA+BiB,EAAQY,OACrD/B,IAAAC,cAAA,OAAKC,UAAU,SACZiB,EAAQoB,OAAOpC,IAAI,CAACY,EAAOM,IAC1BrB,IAAAC,cAACY,EAAK,CAACR,IAAKgB,EAAON,MAAOA,OAPbf,IAAAC,cAAA,WAAK,eAuDbkD,MAzCHA,KACV,MAAOzD,EAAaC,GAAkBG,mBAAS,UACxCsD,EAAgBC,GAAqBvD,mBAAS,MAE/CN,EAAa,CAAC,QAAS,QAAS,aAChC8D,EAAW,IAAI9D,EAAY,SAAU,OAAQ,WAAY,WAiB/D,OACEQ,IAAAC,cAAA,OAAKC,UAAU,0CACbF,IAAAC,cAACX,EAAU,CACTE,WAAYA,EACZC,gBAnBe8D,IAAMD,EAASE,OAAOpD,IAASZ,EAAWiE,SAASrD,IAoBlEV,YAAaA,EACbC,eAAiBS,IACfT,EAAeS,GACfiD,EAAkB,SAGtBrD,IAAAC,cAAA,YAxBkByD,MACpB,OAAQhE,GACN,IAAK,QACH,OAAO0D,EACHpD,IAAAC,cAACkC,EAAI,CAACE,OAAQe,IACdpD,IAAAC,cAACqB,EAAQ,CAACE,aAAc6B,IAC9B,IAAK,YACH,OAAOrD,IAAAC,cAACwC,EAAS,MACnB,QACE,OAAOzC,IAAAC,cAAC8C,EAAW,CAAC3C,KAAMV,MAerBgE,IACP1D,IAAAC,cAAA,UAAQC,UAAU,2CAA0C,SACvD,IAAIyD,MAAOC,cAAc,gBC7MrBC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAhC,KAAA+B,EAAAE,KAAA,UAAqBjC,KAAK1C,IAAiD,IAAhD4E,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAAShF,EACpE4E,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH5E,IAAAC,cAACD,IAAM6E,WAAU,KACf7E,IAAAC,cAACkD,EAAG,QAORU","file":"static/js/main.dea8bec1.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ChevronDown } from 'lucide-react';\n\n// Simulated API calls\nconst fetchPosts = () => Promise.resolve([\n  { id: 1, title: \"First Post\", excerpt: \"This is the first post.\" },\n  { id: 2, title: \"Second Post\", excerpt: \"This is the second post.\" },\n]);\n\nconst fetchPost = (id) => Promise.resolve({\n  id,\n  title: `Post ${id}`,\n  blocks: [\n    { content: \"This is the content of the post.\", children: [] },\n    { content: \"It can have multiple blocks.\", children: [] },\n  ]\n});\n\nconst fetchPageContent = (page) => Promise.resolve({\n  title: page.charAt(0).toUpperCase() + page.slice(1),\n  blocks: [\n    { content: `This is the ${page} page content.`, children: [] },\n  ]\n});\n\nconst fetchBooks = () => Promise.resolve([\n  { title: \"Book 1\", author: \"Author 1\", recommendation: \"Great read!\" },\n  { title: \"Book 2\", author: \"Author 2\", recommendation: \"Highly recommended.\" },\n]);\n\nconst Navigation = ({ fixedPages, morePagesGetter, currentPage, setCurrentPage }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const morePages = morePagesGetter();\n\n  return (\n    <nav className=\"flex flex-wrap justify-between items-center mb-8\">\n      <span className=\"text-lg font-semibold mr-6\">Your Name</span>\n      <div className=\"flex items-center space-x-4\">\n        {fixedPages.map(page => (\n          <button\n            key={page}\n            onClick={() => setCurrentPage(page)}\n            className={`text-gray-600 hover:text-gray-900 transition-colors duration-200 ${currentPage === page ? 'font-semibold' : ''}`}\n          >\n            {page.charAt(0).toUpperCase() + page.slice(1)}\n          </button>\n        ))}\n        {morePages.length > 0 && (\n          <div className=\"relative\">\n            <button\n              onClick={() => setIsOpen(!isOpen)}\n              className=\"text-gray-600 hover:text-gray-900 flex items-center transition-colors duration-200\"\n            >\n              More <ChevronDown size={16} className={`ml-1 transform transition-transform duration-200 ${isOpen ? 'rotate-180' : ''}`} />\n            </button>\n            <div className={`absolute right-0 mt-2 py-2 w-48 bg-white rounded-md shadow-xl z-20 overflow-hidden transition-all duration-200 ease-in-out ${isOpen ? 'max-h-96 opacity-100' : 'max-h-0 opacity-0'}`}>\n              {morePages.map(page => (\n                <button\n                  key={page}\n                  onClick={() => { setCurrentPage(page); setIsOpen(false); }}\n                  className=\"block px-4 py-2 text-sm capitalize text-gray-700 hover:bg-gray-100 w-full text-left transition-colors duration-200\"\n                >\n                  {page}\n                </button>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nconst Block = ({ block, level = 0 }) => {\n  const hasChildren = block.children && block.children.length > 0;\n  \n  return (\n    <div className={`mb-4 ${level > 0 ? 'ml-6' : ''}`}>\n      <p className=\"text-gray-900\">{block.content}</p>\n      {hasChildren && (\n        <div className=\"mt-2\">\n          {block.children.map((child, index) => (\n            <Block key={index} block={child} level={level + 1} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst PostList = ({ onSelectPost }) => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    fetchPosts().then(setPosts);\n  }, []);\n\n  return (\n    <div>\n      <h1 className=\"text-3xl font-semibold mb-6\">Posts</h1>\n      {posts.map(post => (\n        <div key={post.id} className=\"mb-8\">\n          <h2 className=\"text-xl font-semibold mb-2\">\n            <button \n              onClick={() => onSelectPost(post.id)} \n              className=\"text-blue-600 hover:underline transition-colors duration-200\"\n            >\n              {post.title}\n            </button>\n          </h2>\n          <p className=\"text-gray-600\">{post.excerpt}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst Post = ({ postId }) => {\n  const [post, setPost] = useState(null);\n\n  useEffect(() => {\n    fetchPost(postId).then(setPost);\n  }, [postId]);\n\n  if (!post) return <div>Loading...</div>;\n\n  return (\n    <div>\n      <h1 className=\"text-3xl font-semibold mb-6\">{post.title}</h1>\n      <div className=\"prose\">\n        {post.blocks.map((block, index) => (\n          <Block key={index} block={block} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst Bookshelf = () => {\n  const [books, setBooks] = useState([]);\n\n  useEffect(() => {\n    fetchBooks().then(setBooks);\n  }, []);\n\n  return (\n    <div>\n      <h1 className=\"text-3xl font-semibold mb-6\">My Bookshelf</h1>\n      <div className=\"space-y-6\">\n        {books.map((book, index) => (\n          <div key={index}>\n            <h2 className=\"text-xl font-semibold\">{book.title}</h2>\n            <p className=\"text-gray-600\">by {book.author}</p>\n            <p className=\"mt-2\">{book.recommendation}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst GenericPage = ({ page }) => {\n  const [content, setContent] = useState(null);\n\n  useEffect(() => {\n    fetchPageContent(page).then(setContent);\n  }, [page]);\n\n  if (!content) return <div>Loading...</div>;\n\n  return (\n    <div>\n      <h1 className=\"text-3xl font-semibold mb-6\">{content.title}</h1>\n      <div className=\"prose\">\n        {content.blocks.map((block, index) => (\n          <Block key={index} block={block} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst App = () => {\n  const [currentPage, setCurrentPage] = useState('posts');\n  const [selectedPostId, setSelectedPostId] = useState(null);\n  \n  const fixedPages = ['posts', 'about', 'bookshelf'];\n  const allPages = [...fixedPages, 'travel', 'food', 'projects', 'contact'];\n  \n  const getMorePages = () => allPages.filter(page => !fixedPages.includes(page));\n\n  const renderContent = () => {\n    switch (currentPage) {\n      case 'posts':\n        return selectedPostId \n          ? <Post postId={selectedPostId} /> \n          : <PostList onSelectPost={setSelectedPostId} />;\n      case 'bookshelf':\n        return <Bookshelf />;\n      default:\n        return <GenericPage page={currentPage} />;\n    }\n  };\n\n  return (\n    <div className=\"max-w-2xl mx-auto px-4 py-8 font-serif\">\n      <Navigation \n        fixedPages={fixedPages} \n        morePagesGetter={getMorePages}\n        currentPage={currentPage} \n        setCurrentPage={(page) => {\n          setCurrentPage(page);\n          setSelectedPostId(null);\n        }}\n      />\n      <main>{renderContent()}</main>\n      <footer className=\"mt-16 text-center text-gray-500 text-sm\">\n        © {new Date().getFullYear()} Your Name\n      </footer>\n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}